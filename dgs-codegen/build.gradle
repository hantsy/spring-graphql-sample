plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.netflix.dgs.codegen" version "5.0.6" //https://plugins.gradle.org/plugin/com.netflix.dgs.codegen
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '16'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation(platform("com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:4.6.0"))
    implementation "com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter", {
        exclude group: 'org.yaml', module: 'snakeyaml'
    }
    implementation 'com.netflix.graphql.dgs:graphql-dgs-extended-scalars', {
        exclude group: 'org.yaml', module: 'snakeyaml'
    }// auto-configure graphql extended scalars

    implementation 'com.graphql-java:graphql-java-extended-validation:16.0.0', {
        exclude group: 'org.hibernate.validator', module: 'hibernate-validator'
    }// graphql-java-extended-validation 16.0.0 depends on an incompatible version 6.2.0.Final of hibernate-validator
    implementation 'org.hibernate.validator:hibernate-validator:6.1.7.Final'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.postgresql:postgresql'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.yaml:snakeyaml:1.29'

    //configure Lombok for compile java/ compile tests
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

generateJava {
    schemaPaths = ["${projectDir}/src/main/resources/schema"] // List of directories containing schema files
    packageName = 'com.example.demo.gql' // The package name to use to generate sources
    generateClient = true // Enable generating the type safe query API
    //typeMapping = ["DateTime": "java.time.LocalDateTime"]
    shortProjectionNames = false
    maxProjectionDepth = 2
    snakeCaseConstantNames = true
}

test {
    useJUnitPlatform()
}
