plugins {
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.netflix.dgs.codegen" version "5.1.17" //https://plugins.gradle.org/plugin/com.netflix.dgs.codegen
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation(platform("com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:5.0.1"))
    implementation "com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter", {
        exclude group: 'org.yaml', module: 'snakeyaml'
    }

    //autoconfigure graphql-java extended-scalars and extended-validation
    implementation 'com.netflix.graphql.dgs:graphql-dgs-extended-scalars'
    implementation 'com.netflix.graphql.dgs:graphql-dgs-extended-validation'

    // see: https://github.com/Netflix/dgs-framework/pull/659
    // and https://github.com/graphql-java/graphql-java-extended-validation/issues/52
    // implementation 'com.graphql-java:graphql-java-extended-validation:17.0'
    // https://mvnrepository.com/artifact/jakarta.validation/jakarta.validation-api

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.postgresql:postgresql'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.yaml:snakeyaml:1.30'

    //configure Lombok for compile java/ compile tests
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

generateJava {
    schemaPaths = ["${projectDir}/src/main/resources/schema"] // List of directories containing schema files
    packageName = 'com.example.demo.gql' // The package name to use to generate sources
    generateClient = true // Enable generating the type safe query API
    //typeMapping = ["DateTime": "java.time.LocalDateTime"]
    shortProjectionNames = false
    maxProjectionDepth = 2
    snakeCaseConstantNames = true
}

test {
    useJUnitPlatform()
}
