plugins {
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    //Spring SQPR starter
    implementation "io.leangen.graphql:graphql-spqr-spring-boot-starter:1.0.0"
    implementation "com.graphql-java:graphql-java:20.4"

    //
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.postgresql:postgresql'

    //configure Lombok for compile java/ compile tests
    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
    testCompileOnly 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework:spring-webflux'
    testImplementation 'io.projectreactor.netty:reactor-netty'
    testImplementation 'io.projectreactor:reactor-test'
}


// see: https://github.com/leangen/graphql-spqr#hello-world
compileJava {
    options.compilerArgs << '-parameters'
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams true
    }
}
